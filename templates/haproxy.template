global
  log 127.0.0.1 local6
  log 127.0.0.1 local1 notice
  tune.ssl.cachesize 60000 # ~12Mb SSL session cache
  tune.ssl.maxrecord 1400 # 1400 bytes to fit in one MTU
  tune.ssl.lifetime  24h
  stats socket /var/lib/haproxy/stats mode 660 level admin group adm

#  chroot /var/lib/haproxy
#  user haproxy
#  group haproxy

defaults
  mode http
  log global
  ##option httplog        clf
  #log-format %{+Q}o%{-Q}ci\ -\ [%T]\ %r\ %ST\ %B\ %{-Q}s\ %Tq\ %Tw\ %Tc\ %Tr\ %Tt\ %hr
  # condensensed since the nginx decoder does not recognize all the different timings
  log-format %{+Q}o%{-Q}ci\ -\ [%T]\ %r\ %ST\ %B\ %{-Q}s\ %Tr\ %hr

  option                  dontlognull
  option                  splice-auto
  option                  log-separate-errors
  option                  redispatch
  option                  contstats
  option                  tcp-smart-accept
  option                  tcp-smart-connect
  option                  http-server-close
  option                  redispatch
  option                  contstats
  maxconn                 100000
  backlog                 10000
  timeout connect         5s
  timeout client          1m
  timeout server          1m
  timeout http-request    5s
  timeout http-keep-alive 5m
  timeout queue           1m
  timeout tarpit          60s
  timeout check           10s
  timeout tunnel        3600s
  retries                 3
  default-server          inter 2s rise 2 fall 3
  errorfile 400 /etc/haproxy/errors/400.http
  errorfile 403 /etc/haproxy/errors/403.http
  errorfile 408 /etc/haproxy/errors/408.http
  errorfile 500 /etc/haproxy/errors/500.http
  errorfile 502 /etc/haproxy/errors/502.http
  errorfile 503 /etc/haproxy/errors/503.http
  errorfile 504 /etc/haproxy/errors/504.http


frontend https
  mode http
  bind *:80
  bind *:443 ssl crt /etc/ssl/certs/_service.consul.pem ciphers TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256:TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256:TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA:ECDHE-RSA-AES128-GCM-SHA256:TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-SHA:AES128-GCM-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!EDH:!CAMELLIA no-sslv3
  capture request header Referrer len 64
  #capture request header Content-Length len 10
  capture request header User-Agent len 64
  # TODO (JT) - fix this per: https://github.com/jvehent/haproxy-aws
  # Insert a unique request identifier is the headers of the request passed to the backend
  #unique-id-format %{+X}o\ %ci:%cp_%fi:%fp_%Ts_%rt:%pid
  #unique-id-header X-Unique-ID

  {{range services}}
  acl host_{{.Name}} hdr(host) -i {{.Name}}.service.consul
  use_backend {{.Name}}_backend if host_{{.Name}}
  {{end}}

listen stats
  bind *:8001
  option httpclose
  option forwardfor
  stats enable
  stats uri /haproxy?stats
  stats auth admin:123123q
  stats realm HAProxy\ Statistics

{{range services}}
backend {{.Name}}_backend
  balance roundrobin{{range service .Name}}
  server {{.Node}} {{.Address}}:{{.Port}} weight 1 maxconn 1024 cookie {{.Node}} check inter 5000 {{ $config := printf "services/%s" .Name }}{{range $data := tree $config }}
  {{$data.Value}}{{end}}{{end}}
{{end}}
